version: '3.8'

services:
  billing-system:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE:-2025-10-06}
        VCS_REF: ${VCS_REF:-unknown}
        VERSION: ${VERSION:-1.0.0}
    image: billing-system:latest
    container_name: billing-system

    # Environment configuration
    env_file:
      - .env

    # Volume mounts
    volumes:
      # Persistent cache across container restarts
      - cache-data:/app/.cache
      # Log files
      - ./logs:/app/logs
      # Optional: Mount .env for easy updates
      - ./.env:/app/.env:ro

    # Network configuration
    networks:
      - billing-network

    # Resource limits (adjust based on your needs)
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

    # Restart policy
    restart: unless-stopped

    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "from src.config.settings import get_config; get_config()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

    # Override default command for interactive usage
    # Uncomment one of these or provide command via `docker-compose run`
    # command: ["python", "-m", "src.cli", "generate-report", "--month", "2024-10"]
    # command: ["python", "-m", "src.cli", "list-timesheets"]
    # command: ["python", "-m", "src.cli", "validate-data"]

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Named volumes for persistent data
volumes:
  cache-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/.cache

# Network definition
networks:
  billing-network:
    driver: bridge

# Optional: Add a scheduler service for automated report generation
# Uncomment to enable scheduled reports
# scheduler:
#   image: billing-system:latest
#   container_name: billing-scheduler
#   env_file:
#     - .env
#   volumes:
#     - cache-data:/app/.cache
#     - ./logs:/app/logs
#   command: >
#     sh -c "
#       while true; do
#         echo 'Running monthly report generation...'
#         python -m src.cli generate-report --month $(date +%Y-%m)
#         echo 'Sleeping until next month...'
#         sleep 2592000  # 30 days
#       done
#     "
#   networks:
#     - billing-network
#   restart: unless-stopped
