name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src tests --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 src tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check code formatting with black
      run: |
        black --check src tests

    - name: Sort imports with isort
      run: |
        isort --profile=black --check-only src tests

    - name: Type check with mypy
      run: |
        mypy src --ignore-missing-imports

    - name: Test with pytest
      env:
        # Test environment variables
        GOOGLE_PROJECT_ID: test-project
        GOOGLE_PRIVATE_KEY_ID: test-key-id
        GOOGLE_PRIVATE_KEY: "-----BEGIN PRIVATE KEY-----\ntest-key\n-----END PRIVATE KEY-----\n"
        GOOGLE_CLIENT_EMAIL: test@test.com
        GOOGLE_CLIENT_ID: test-client-id
        GOOGLE_CLIENT_X509_CERT_URL: https://test.com/cert
        GOOGLE_SUBJECT_EMAIL: test@example.com
        TIMESHEET_FOLDER_ID: test-folder-id
        PROJECT_TERMS_FILE_ID: test-terms-id
        MONTHLY_INVOICING_FOLDER_ID: test-invoicing-id
        ENVIRONMENT: testing
        DEBUG: true
        LOG_LEVEL: DEBUG
      run: |
        pytest -v --cov=src --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint-and-format:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 isort mypy

    - name: Run black
      run: black --check --diff src tests

    - name: Run flake8
      run: flake8 src tests --max-line-length=88 --extend-ignore=E203,W503,E231

    - name: Run isort
      run: isort --profile=black --check-only --diff src tests

    - name: Run mypy
      run: mypy src --ignore-missing-imports

  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit

    - name: Run safety check
      run: safety check --json

    - name: Run bandit security check
      run: bandit -r src/
